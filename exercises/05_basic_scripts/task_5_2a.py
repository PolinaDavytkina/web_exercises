# -*- coding: utf-8 -*-
"""
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.195/28 - хост из сети 10.0.5.192/28

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях хост/маска, например:
    10.0.5.195/28, 10.0.1.1/24

Подсказка:
Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит адреса хоста + 4 ноля.
То есть, например, адрес хоста 10.1.1.195/28  в двоичном формате будет
bin_ip = "00001010000000010000000111000011"

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего в адресе может быть 32 бита, а 32 - 28 = 4)
00001010000000010000000111000000

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""
ip=input('Введите IP-сети в формате: 10.1.1.0/24: ' )
mas=ip.split("/")
ip=mas[0]

mas=int(mas[1])
maskb="1"*mas+"0"*(32-mas)
octm1=int(maskb[:8], 2)
octm2=int(maskb[:16][8:], 2)
octm3=int(maskb[:24][16:], 2)
octm4=int(maskb[24:], 2)

temp = '''
    {:10} {:10} {:10} {:10}
    {:10b} {:10b} {:10b} {:10b}
    '''
ip=ip.split(".")
oct1=int(ip[0])
oct2=int(ip[1])
oct3=int(ip[2])
oct4=int(ip[3])
nw1=str(bin(oct1)[2:])
nw2=str(bin(oct2)[2:])
nw3=str(bin(oct3)[2:])
nw4=str(bin(oct4)[2:])

Network='0'*(8-len(nw1))+nw1+'0'*(8-len(nw2))+nw2+'0'*(8-len(nw3))+nw3+'0'*(8-len(nw4))+nw4
Network=Network[:mas]
Network=Network+"0"*(32-len(Network))

oct1=int(Network[:8], 2)
oct2=int(Network[:16][8:], 2)
oct3=int(Network[:24][16:], 2)
oct4=int(Network[24:], 2)

print("Network:")
print(temp.format(oct1, oct2, oct3, oct4, oct1, oct2, oct3, oct4))
print("Mask")
print(temp.format(octm1, octm2, octm3, octm4, octm1, octm2, octm3, octm4))